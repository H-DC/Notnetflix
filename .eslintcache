[{"D:\\laCapsule\\clones\\netflix-clone\\src\\index.js":"1","D:\\laCapsule\\clones\\netflix-clone\\src\\App.js":"2","D:\\laCapsule\\clones\\netflix-clone\\src\\reportWebVitals.js":"3","D:\\laCapsule\\clones\\netflix-clone\\src\\components\\GenreComponent.js":"4","D:\\laCapsule\\clones\\netflix-clone\\src\\request.js":"5","D:\\laCapsule\\clones\\netflix-clone\\src\\components\\HeaderComponent.js":"6","D:\\laCapsule\\clones\\netflix-clone\\src\\components\\NavComponent.js":"7","D:\\laCapsule\\clones\\netflix-clone\\src\\components\\OverlayComponent.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":1816,"mtime":1607508619224,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":3367,"mtime":1607429394971,"results":"13","hashOfConfig":"10"},{"size":583,"mtime":1607510224518,"results":"14","hashOfConfig":"10"},{"size":1507,"mtime":1607116262117,"results":"15","hashOfConfig":"10"},{"size":1300,"mtime":1607510245033,"results":"16","hashOfConfig":"10"},{"size":2971,"mtime":1607433031952,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"ihclpo",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"D:\\laCapsule\\clones\\netflix-clone\\src\\index.js",[],["39","40"],"D:\\laCapsule\\clones\\netflix-clone\\src\\App.js",["41"],"import { useState,useEffect } from 'react';\nimport './App.css';\nimport GenreComponent from './components/GenreComponent';\nimport HeaderComponent from './components/HeaderComponent';\nimport NavComponent from './components/NavComponent';\nimport OverlayComponent from './components/OverlayComponent';\n\n\nimport requests from './request'\n\nfunction App() {\n\n  const [overlayData,setOverlayData] = useState(null);\n  const [isOverlay,setIsOverlay] = useState(false);\n  const [isHover,setIsHover] = useState(false);\n  const [trigger,setTrigger] = useState(false);\n\n  useEffect(()=>{\n    if(isHover){\n      setIsOverlay(true)\n    }else{\n      setIsOverlay(false);\n    }\n    setTrigger(false);\n  },[trigger])\n \n\n  let handleHover = (data)=>{\n    setIsHover(true);\n    setOverlayData(data);\n    setTimeout(()=>{setTrigger(true)},800);\n  }\n\n  let handleLeave = ()=> {\n    setIsHover(false);\n    setIsOverlay(false);\n    setOverlayData(null);\n  }\n\n  return (\n    <div>\n      <NavComponent/>\n      <HeaderComponent/>\n      <div id=\"mainBoard\">\n        <GenreComponent genre=\"Trending Now\" urlToFetch={requests.urlTrending} handleHover={handleHover} handleLeave={handleLeave} isBigPoster={false} />\n        <GenreComponent genre=\"Action Movies\" urlToFetch={requests.urlActionMovies} handleHover={handleHover} handleLeave={handleLeave} isBigPoster={false} />\n        <GenreComponent genre=\"Netflix Originals\" urlToFetch={requests.urlNetflix}  handleHover={handleHover} handleLeave={handleLeave} isBigPoster/>\n        <GenreComponent genre=\"Comedies\" urlToFetch={requests.urlComedyMovies} handleHover={handleHover} handleLeave={handleLeave} isBigPoster={false} />\n      </div>\n      {((overlayData!=null)&&isOverlay)?<OverlayComponent overlayData={overlayData} handleLeave={handleLeave}/>:null}\n    </div>\n  );\n}\n\nexport default App;\n","D:\\laCapsule\\clones\\netflix-clone\\src\\reportWebVitals.js",[],"D:\\laCapsule\\clones\\netflix-clone\\src\\components\\GenreComponent.js",["42"],"import React, {useState, useEffect} from 'react';\r\n\r\nimport './GenreComponent.css';\r\n\r\nimport { MdChevronRight } from \"react-icons/md\";\r\nimport { MdChevronLeft } from \"react-icons/md\";\r\n\r\nvar tmdbUrl = 'https://image.tmdb.org/t/p/original/';\r\n\r\n\r\nfunction GenreComponent({genre, urlToFetch, isBigPoster, handleHover, handleLeave}) {\r\n    \r\n    \r\n    const [moviesList, setMoviesList] = useState([]);\r\n    const [xPosition, setXposition] = useState(0);\r\n    const [vwToEnd,setVwToEnd] = useState(30);\r\n    \r\n    let calcScrollWidth = (numOfMovies) => {\r\n        let remUnit = parseFloat(getComputedStyle(document.documentElement).fontSize);\r\n        let fullVw = window.innerWidth;\r\n        let numberOfCardDisp = fullVw / (remUnit*18);\r\n        let numberOfBigCardDisp = fullVw / (remUnit*13.5);\r\n        let vwUnitToEnd = (100*numOfMovies/numberOfCardDisp)-92;\r\n        let vwUnitToEndBig = (100*numOfMovies/numberOfBigCardDisp)-92;\r\n        setVwToEnd(isBigPoster?vwUnitToEndBig:vwUnitToEnd)\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        let fetchUrl = async()=>{\r\n            console.log(\"fetch\")\r\n            let res = await fetch(urlToFetch);\r\n            let body = await res.json();\r\n            let numOfMovies = body.results.length;\r\n            setMoviesList(body.results)\r\n            calcScrollWidth(numOfMovies)\r\n        }\r\n        fetchUrl();\r\n    },[])\r\n    \r\n    let arrowOnClick = (value) => {\r\n        calcScrollWidth(moviesList.length);\r\n        let newXpos = value + xPosition;\r\n        if (newXpos<0){\r\n            newXpos=0;\r\n        } else if (newXpos>vwToEnd){\r\n            newXpos=vwToEnd;\r\n        }\r\n        setXposition(newXpos);\r\n        console.log(newXpos,vwToEnd);\r\n    }\r\n    \r\n    let posterClass = isBigPoster?\"bigMoviePoster\":\"moviePoster\";\r\n    let rightArrowClass = isBigPoster?\"arrow rightArrow bigArrow\":\"arrow rightArrow normalArrow\";\r\n    let leftArrowClass = isBigPoster?\"arrow leftArrow bigArrow\":\"arrow leftArrow normalArrow\";\r\n    \r\n    return (\r\n        <div className=\"genreContainer\">\r\n        <h2 className=\"genreTitle\">{genre}</h2>\r\n        <div className=\"moviesContainer\" style={{transform: `translateX(-${xPosition}vw)`}}>\r\n            {moviesList.map((e,i)=>(\r\n                <div className={isBigPoster?\"movieCard\":\"movieCard movieCardLabel\"}>\r\n\r\n                        <img className={posterClass} src={isBigPoster?tmdbUrl+e.poster_path:tmdbUrl+e.backdrop_path} \r\n                        alt={e.name} onMouseEnter={(evt)=>handleHover({isBigPoster,movieData:e,evt})} />\r\n                        {!isBigPoster?\r\n                        <div className=\"posterLabel\">\r\n                            <span style={{marginBottom:'0.2rem'}}>{(e.name||e.original_name||e.original_title||e.title).slice(0,20)} &middot; {e.first_air_date||e.release_date}</span>\r\n                        </div>:null}\r\n\r\n                </div>\r\n            ))}\r\n        </div>\r\n        {xPosition<vwToEnd?<button className={rightArrowClass} onClick={()=>arrowOnClick(90)} onMouseEnter={()=>handleLeave()}>\r\n            <MdChevronRight className=\"chevronSvg\"/>\r\n        </button>:null}\r\n        {xPosition>0?<button className={leftArrowClass} onClick={()=>arrowOnClick(-90)} onMouseEnter={()=>handleLeave()}>\r\n            <MdChevronLeft className=\"chevronSvg\"/>\r\n        </button>:null}\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default GenreComponent;","D:\\laCapsule\\clones\\netflix-clone\\src\\request.js",[],"D:\\laCapsule\\clones\\netflix-clone\\src\\components\\HeaderComponent.js",["43","44"],"import React, {useState, useEffect} from 'react';\r\nimport requests from '../request';\r\nimport './HeaderComponent.css';\r\nimport playIcon from '../assets/play.png';\r\nimport infoIcon from '../assets/information.png';\r\n\r\n\r\nfunction HeaderComponent() {\r\n\r\n    const [movie,setMovie] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        let fetchUrl = async()=>{\r\n            let res = await fetch(requests.urlNetflix);\r\n            let body = await res.json();\r\n            let randomIndex = Math.floor(Math.random()*body.results.length);\r\n            setMovie(body.results[randomIndex]);\r\n        }\r\n        fetchUrl();\r\n    },[])\r\n\r\n    let title = movie.title?movie.title:\r\n                    movie.name?movie.name:movie.original_name;\r\n    \r\n    let description = movie.overview?movie.overview.substr(0,150)+'...':\"\";\r\n\r\n  return (\r\n    <div className=\"banner\" style={{ backgroundImage: `url('https://image.tmdb.org/t/p/original/${movie.backdrop_path}')` }}>\r\n        <div className=\"containerFilter\">\r\n            <h1 className=\"bannerTitle\">{title}</h1>\r\n            <h2 className=\"bannerDesc\">{description}</h2>\r\n            <div className='btnDiv'>\r\n                <button id=\"playBtn\"><img src={playIcon} className=\"btnIcon\" /><span>Play</span></button>\r\n                <button id=\"infoBtn\"><img src={infoIcon} className=\"btnIcon\" /><span>More info</span></button>\r\n            </div>\r\n            <div className=\"bottomGradient\"/>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default HeaderComponent;","D:\\laCapsule\\clones\\netflix-clone\\src\\components\\NavComponent.js",["45","46"],"D:\\laCapsule\\clones\\netflix-clone\\src\\components\\OverlayComponent.js",["47","48","49"],"import React, {useState, useEffect} from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nimport './OverlayComponent.css';\r\n\r\nimport { HiOutlineThumbUp } from \"react-icons/hi\";\r\nimport { HiOutlineThumbDown } from \"react-icons/hi\";\r\nimport { MdAutorenew, MdPlayArrow } from \"react-icons/md\";\r\nimport { MdExpandMore } from \"react-icons/md\";\r\n\r\nvar tmdbUrl = 'https://image.tmdb.org/t/p/original/';\r\n\r\nfunction OverlayComponent({ handleLeave, overlayData:{isBigPoster,movieData,evt}}) {\r\n\r\n  const [youtubeCode,setYoutubeCode] = useState(null);\r\n\r\n  let topPosition = evt.target.getBoundingClientRect().top+window.scrollY;\r\n  let leftPosition = evt.target.getBoundingClientRect().left+window.scrollX;\r\n  let posterClass = isBigPoster?\"bigMoviePoster\":\"moviePoster\";\r\n\r\n  const playerOpt = {\r\n    width:'100%',\r\n    height: 'auto',\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  }\r\n\r\n  let getYoutubeUrl = (movieData) => {\r\n    movieTrailer(movieData.name||movieData.original_name||movieData.original_title||movieData.title||\"\")\r\n     .then(res=>{\r\n       console.log(res)\r\n       let regex =/watch\\?v\\=.*/;\r\n       let code = res.match(regex)[0].slice(8);\r\n       setTimeout(()=>setYoutubeCode(code),1000);\r\n     });\r\n   }\r\n\r\n   useEffect(()=>{\r\n     getYoutubeUrl(movieData)\r\n   },[])\r\n  \r\n    return (\r\n            <div className=\"overlayContainer\" style={{top:topPosition,left:leftPosition}} onMouseLeave={()=>handleLeave()}>\r\n                {youtubeCode?\r\n                <YouTube videoId={youtubeCode} opts={playerOpt}/>:\r\n                <img className={posterClass} src={isBigPoster?tmdbUrl+movieData.poster_path:tmdbUrl+movieData.backdrop_path} \r\n                alt={movieData.name} />}\r\n                <div className=\"overlayBtnContainer\">\r\n                  <button className=\"overlayPlayBtn\"><MdPlayArrow/></button>\r\n                  <button className=\"overlayBtn\">+</button>\r\n                  {!isBigPoster?\r\n                  <>\r\n                  <button className=\"overlayBtn\"><HiOutlineThumbUp/></button>\r\n                  <button className=\"overlayBtn\"><HiOutlineThumbDown/></button>\r\n                  </>:null}\r\n                  <button className=\"overlayMoreBtn\"><MdExpandMore/></button>\r\n                </div>\r\n                <div className=\"overlayTextContainer\">\r\n                  <span className=\"matchSpan\">98% Match </span>\r\n                  <span className=\"overlayText borderSpan\">18+</span>\r\n                  <span className=\"overlayText\">1h {Math.floor(Math.random()*40)+20}m </span>\r\n                </div>\r\n                <div className=\"overlayTextContainer\">\r\n                  <span className=\"overlayText\">{(movieData.name||movieData.original_name||movieData.original_title||movieData.title).slice(0,18)} &middot; {movieData.first_air_date||movieData.release_date}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    export default OverlayComponent;",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":25,"column":5,"nodeType":"56","endLine":25,"endColumn":14,"suggestions":"57"},{"ruleId":"54","severity":1,"message":"58","line":38,"column":7,"nodeType":"56","endLine":38,"endColumn":9,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":33,"column":38,"nodeType":"62","endLine":33,"endColumn":80},{"ruleId":"60","severity":1,"message":"61","line":34,"column":38,"nodeType":"62","endLine":34,"endColumn":80},{"ruleId":"60","severity":1,"message":"61","line":30,"column":13,"nodeType":"62","endLine":30,"endColumn":52},{"ruleId":"60","severity":1,"message":"61","line":37,"column":13,"nodeType":"62","endLine":37,"endColumn":52},{"ruleId":"63","severity":1,"message":"64","line":9,"column":10,"nodeType":"65","messageId":"66","endLine":9,"endColumn":21},{"ruleId":"67","severity":1,"message":"68","line":34,"column":28,"nodeType":"69","messageId":"70","endLine":34,"endColumn":29,"suggestions":"71"},{"ruleId":"54","severity":1,"message":"72","line":42,"column":6,"nodeType":"56","endLine":42,"endColumn":8,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isHover'. Either include it or remove the dependency array.","ArrayExpression",["76"],"React Hook useEffect has missing dependencies: 'calcScrollWidth' and 'urlToFetch'. Either include them or remove the dependency array.",["77"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'MdAutorenew' is defined but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\=.","Literal","unnecessaryEscape",["78","79"],"React Hook useEffect has a missing dependency: 'movieData'. Either include it or remove the dependency array.",["80"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},{"messageId":"85","fix":"86","desc":"87"},{"messageId":"88","fix":"89","desc":"90"},{"desc":"91","fix":"92"},"Update the dependencies array to be: [isHover, trigger]",{"range":"93","text":"94"},"Update the dependencies array to be: [calcScrollWidth, urlToFetch]",{"range":"95","text":"96"},"removeEscape",{"range":"97","text":"98"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"99","text":"100"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [movieData]",{"range":"101","text":"102"},[687,696],"[isHover, trigger]",[1361,1363],"[calcScrollWidth, urlToFetch]",[1144,1145],"",[1144,1144],"\\",[1326,1328],"[movieData]"]